% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MRA_spacetime.R
\name{stmra_predict}
\alias{stmra_predict}
\title{Predict values at unobserved locations}
\usage{
stmra_predict(model, data, mask = NULL, pred_locs = NULL)
}
\arguments{
\item{model}{A spatiotemporal multiresolution approximation object including covariance function parameters theta}

\item{data}{Either a RasterBrick or RasterStack object, or a data matrix with named(!) columns "x", "y", "t", "value"; see Details}

\item{mask}{A RasterBrick / RasterStack object with same dimensions as \code{data}, only pixels with non NA cells in the mask will be predicted; ignored if data is a matrix}

\item{pred_locs}{matrix containing prediction locations with columns "x", "y", "t"}
}
\value{
Depending on the type of \code{pred_locs} either a list of two RasterBricks with predicted means and variances, or a matrix with columns "x", "y", "t", "pred.mean",  and "pred.var"
}
\description{
Predict values at unobserved locations
}
\details{
The \code{data} argument may be either a data matrix, or a RasterBrick / RasterStack object. In the former case, the argument \code{pred_locs} must be provided. In the latter case, if neither \code{mask} nor \code{pred_locs} is provided, predictions are computed for all NA pixels in  \code{data}.
If furthermore an additional mask is given, only NA pixels with non-NA values in the mask are predicted. Both, \code{mask} and NA values in \code{data} are ignored if `pred_locs`` is provided.

The returned type is controlled by the type of provided prediction locations. If \code{pred_locs} is a RasterStack / RasterBrick or NULL, the function returns a list with two RasterBricks as elements, containing
predicted means and variances repsectively.  If \code{pred_locs} is a matrix, the returned value as a matrix with the same number of rows but two more columns "pred.mean", and "pred.var", representing mean and variance predictions.k,
}
