// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// R2_distances
NumericMatrix R2_distances(NumericMatrix locA, NumericMatrix locB);
RcppExport SEXP _stmra_R2_distances(SEXP locASEXP, SEXP locBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type locA(locASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locB(locBSEXP);
    rcpp_result_gen = Rcpp::wrap(R2_distances(locA, locB));
    return rcpp_result_gen;
END_RCPP
}
// R3_distances
NumericMatrix R3_distances(NumericMatrix locA, NumericMatrix locB);
RcppExport SEXP _stmra_R3_distances(SEXP locASEXP, SEXP locBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type locA(locASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locB(locBSEXP);
    rcpp_result_gen = Rcpp::wrap(R3_distances(locA, locB));
    return rcpp_result_gen;
END_RCPP
}
// S2_distances
NumericMatrix S2_distances(NumericMatrix locA, NumericMatrix locB);
RcppExport SEXP _stmra_S2_distances(SEXP locASEXP, SEXP locBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type locA(locASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locB(locBSEXP);
    rcpp_result_gen = Rcpp::wrap(S2_distances(locA, locB));
    return rcpp_result_gen;
END_RCPP
}
// S2_distances_angular
NumericMatrix S2_distances_angular(NumericMatrix locA, NumericMatrix locB);
RcppExport SEXP _stmra_S2_distances_angular(SEXP locASEXP, SEXP locBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type locA(locASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locB(locBSEXP);
    rcpp_result_gen = Rcpp::wrap(S2_distances_angular(locA, locB));
    return rcpp_result_gen;
END_RCPP
}
// R1_distances
NumericMatrix R1_distances(NumericMatrix locA, NumericMatrix locB);
RcppExport SEXP _stmra_R1_distances(SEXP locASEXP, SEXP locBSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type locA(locASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locB(locBSEXP);
    rcpp_result_gen = Rcpp::wrap(R1_distances(locA, locB));
    return rcpp_result_gen;
END_RCPP
}
// cov_nonstationary_latitude
NumericMatrix cov_nonstationary_latitude(NumericMatrix locA, NumericMatrix locB, NumericVector theta, uint16_t n_knots);
RcppExport SEXP _stmra_cov_nonstationary_latitude(SEXP locASEXP, SEXP locBSEXP, SEXP thetaSEXP, SEXP n_knotsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type locA(locASEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type locB(locBSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< uint16_t >::type n_knots(n_knotsSEXP);
    rcpp_result_gen = Rcpp::wrap(cov_nonstationary_latitude(locA, locB, theta, n_knots));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_stmra_R2_distances", (DL_FUNC) &_stmra_R2_distances, 2},
    {"_stmra_R3_distances", (DL_FUNC) &_stmra_R3_distances, 2},
    {"_stmra_S2_distances", (DL_FUNC) &_stmra_S2_distances, 2},
    {"_stmra_S2_distances_angular", (DL_FUNC) &_stmra_S2_distances_angular, 2},
    {"_stmra_R1_distances", (DL_FUNC) &_stmra_R1_distances, 2},
    {"_stmra_cov_nonstationary_latitude", (DL_FUNC) &_stmra_cov_nonstationary_latitude, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_stmra(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
